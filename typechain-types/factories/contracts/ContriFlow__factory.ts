/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ContriFlow,
  ContriFlowInterface,
} from "../../contracts/ContriFlow";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUser",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "repoName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "repoName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AmountRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "repoName",
        type: "string",
      },
    ],
    name: "RewardSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "string",
        name: "_repoName",
        type: "string",
      },
    ],
    name: "addAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "_repoName",
        type: "string",
      },
    ],
    name: "getRepoAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "string",
        name: "_repoName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_repoName",
        type: "string",
      },
    ],
    name: "sendReward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "userRepoRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b5060016000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516111d161006e600039600081816102b9015261039101526111d16000f3fe6080604052600436106100595760003560e01c806302936e191461009e5780633a702ec2146100db5780633ccfd60b146100f7578063441fcf241461010e5780634cfce9a31461012a578063a231f1c31461014657610099565b36610099576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009090610a50565b60405180910390fd5b600080fd5b3480156100aa57600080fd5b506100c560048036038101906100c09190610b47565b610183565b6040516100d29190610bc0565b60405180910390f35b6100f560048036038101906100f09190610b47565b6101ec565b005b34801561010357600080fd5b5061010c6102b7565b005b61012860048036038101906101239190610c07565b61045d565b005b610144600480360381019061013f9190610c8f565b610758565b005b34801561015257600080fd5b5061016d60048036038101906101689190610e44565b610968565b60405161017a9190610bc0565b60405180910390f35b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083836040516101d4929190610ed0565b90815260200160405180910390205490509392505050565b34600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838360405161023c929190610ed0565b908152602001604051809103902060008282546102599190610f18565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f8905691cbfc652de29d0883992f61c41e017514326c44e39f6e4e4b4b5e2dcb78383346040516102aa93929190610f79565b60405180910390a2505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033c90610ff7565b60405180910390fd5b60004790506000811161038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490611063565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516103d3906110b4565b60006040518083038185875af1925050503d8060008114610410576040519150601f19603f3d011682016040523d82523d6000602084013e610415565b606091505b5050905080610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090611115565b60405180910390fd5b5050565b6104656109a3565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036104cb576040517f9c8d2cd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610531576040517ffd684c3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383604051610581929190610ed0565b90815260200160405180910390205410156105c8576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208383604051610618929190610ed0565b908152602001604051809103902060008282546106359190611135565b9250508190555060008473ffffffffffffffffffffffffffffffffffffffff1684604051610662906110b4565b60006040518083038185875af1925050503d806000811461069f576040519150601f19603f3d011682016040523d82523d6000602084013e6106a4565b606091505b50509050806106df576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdd8065b16d3ab0a4386324ad5166f06c172576d701c0c0b3a56d3a31d4d5b34286868660405161074093929190611169565b60405180910390a3506107516109e9565b5050505050565b80600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084846040516107a8929190610ed0565b90815260200160405180910390205410156107ef576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1682604051610815906110b4565b60006040518083038185875af1925050503d8060008114610852576040519150601f19603f3d011682016040523d82523d6000602084013e610857565b606091505b505090508061089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611115565b60405180910390fd5b81600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085856040516108eb929190610ed0565b908152602001604051809103902060008282546109089190611135565b925050819055508473ffffffffffffffffffffffffffffffffffffffff167fa7a524a6b9e44dc93c4e5f7ce0f2696846b8cfa463aae64975941032c4b9538085853460405161095993929190610f79565b60405180910390a25050505050565b600160205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b6002600054036109df576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600082825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f776564600082015250565b6000610a3a6020836109f3565b9150610a4582610a04565b602082019050919050565b60006020820190508181036000830152610a6981610a2d565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aaf82610a84565b9050919050565b610abf81610aa4565b8114610aca57600080fd5b50565b600081359050610adc81610ab6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610b0757610b06610ae2565b5b8235905067ffffffffffffffff811115610b2457610b23610ae7565b5b602083019150836001820283011115610b4057610b3f610aec565b5b9250929050565b600080600060408486031215610b6057610b5f610a7a565b5b6000610b6e86828701610acd565b935050602084013567ffffffffffffffff811115610b8f57610b8e610a7f565b5b610b9b86828701610af1565b92509250509250925092565b6000819050919050565b610bba81610ba7565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610ba7565b8114610bef57600080fd5b50565b600081359050610c0181610bdb565b92915050565b600080600080600060808688031215610c2357610c22610a7a565b5b6000610c3188828901610acd565b9550506020610c4288828901610acd565b9450506040610c5388828901610bf2565b935050606086013567ffffffffffffffff811115610c7457610c73610a7f565b5b610c8088828901610af1565b92509250509295509295909350565b60008060008060608587031215610ca957610ca8610a7a565b5b6000610cb787828801610acd565b945050602085013567ffffffffffffffff811115610cd857610cd7610a7f565b5b610ce487828801610af1565b93509350506040610cf787828801610bf2565b91505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d5182610d08565b810181811067ffffffffffffffff82111715610d7057610d6f610d19565b5b80604052505050565b6000610d83610a70565b9050610d8f8282610d48565b919050565b600067ffffffffffffffff821115610daf57610dae610d19565b5b610db882610d08565b9050602081019050919050565b82818337600083830152505050565b6000610de7610de284610d94565b610d79565b905082815260208101848484011115610e0357610e02610d03565b5b610e0e848285610dc5565b509392505050565b600082601f830112610e2b57610e2a610ae2565b5b8135610e3b848260208601610dd4565b91505092915050565b60008060408385031215610e5b57610e5a610a7a565b5b6000610e6985828601610acd565b925050602083013567ffffffffffffffff811115610e8a57610e89610a7f565b5b610e9685828601610e16565b9150509250929050565b600081905092915050565b6000610eb78385610ea0565b9350610ec4838584610dc5565b82840190509392505050565b6000610edd828486610eab565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2382610ba7565b9150610f2e83610ba7565b9250828201905080821115610f4657610f45610ee9565b5b92915050565b6000610f5883856109f3565b9350610f65838584610dc5565b610f6e83610d08565b840190509392505050565b60006040820190508181036000830152610f94818587610f4c565b9050610fa36020830184610bb1565b949350505050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b6000610fe1600d836109f3565b9150610fec82610fab565b602082019050919050565b6000602082019050818103600083015261101081610fd4565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b600061104d6014836109f3565b915061105882611017565b602082019050919050565b6000602082019050818103600083015261107c81611040565b9050919050565b600081905092915050565b50565b600061109e600083611083565b91506110a98261108e565b600082019050919050565b60006110bf82611091565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b60006110ff6011836109f3565b915061110a826110c9565b602082019050919050565b6000602082019050818103600083015261112e816110f2565b9050919050565b600061114082610ba7565b915061114b83610ba7565b925082820390508181111561116357611162610ee9565b5b92915050565b600060408201905061117e6000830186610bb1565b8181036020830152611191818486610f4c565b905094935050505056fea2646970667358221220c9078dad3231e67551ca15aaaf10775c063e712e8d9d3b217efb2ccc8f8be4c664736f6c634300081c0033";

type ContriFlowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContriFlowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContriFlow__factory extends ContractFactory {
  constructor(...args: ContriFlowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContriFlow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContriFlow__factory {
    return super.connect(runner) as ContriFlow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContriFlowInterface {
    return new Interface(_abi) as ContriFlowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ContriFlow {
    return new Contract(address, _abi, runner) as unknown as ContriFlow;
  }
}
